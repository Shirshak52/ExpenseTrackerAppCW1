@using ExpenseTracker.Models
@using ExpenseTracker.Services
@using Microsoft.AspNetCore.Components.Forms
@using MudBlazor
@inject IAuthService AuthService
@inject NavigationManager NavigationManager

<MudCard Class="mx-auto mt-4 p-4" Style="max-width: 400px;">
    <MudCardContent>
        <!-- Form header -->
        <MudText Typo="Typo.h5" Class="text-center mb-4">Sign Up</MudText>

        <!-- Input fields -->
        <EditForm Model="@user" OnValidSubmit="HandleSignup">
            <DataAnnotationsValidator />

            <!-- Username -->
            <MudTextField @bind-Value="@user.Username" Label="Username" Variant="Variant.Outlined" Class="mb-3" Required="true" />

            <!-- Password -->
            <MudTextField @bind-Value="@user.Password" Label="Password" Variant="Variant.Outlined" 
            InputType="@PasswordInput" Adornment="Adornment.End" AdornmentIcon="@PasswordInputIcon" 
            OnAdornmentClick="TogglePasswordVisibility" AdornmentAriaLabel="Show Password" Required="true" />

            <!-- Preferred Currency -->
            <MudSelect @bind-Value="@user.PreferredCurrency" Label="Preferred Currency" Variant="Variant.Outlined" Class="mb-3" Required="true">
                @foreach (var currency in currencies)
                {
                    <MudSelectItem Value="@currency">@currency</MudSelectItem>
                }
            </MudSelect>

            <!-- Signup button -->
            <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" 
            Color="Color.Primary" Class="mt-2" FullWidth="true">Sign Up</MudButton>
        </EditForm>
    </MudCardContent>
</MudCard>

@code {
    private User user = new User();  // For the Signup form

    // For storing the list of avaliable currencies
    private List<string> currencies => AuthService.GetAvailableCurrencies();

    private string errorMessage = string.Empty;


    // For password visibility (toggling on/off) [Taken directly from MudBlazor's Website]
    private bool isShow;
    private InputType PasswordInput = InputType.Password;
    private string PasswordInputIcon = Icons.Material.Filled.VisibilityOff;
    private void TogglePasswordVisibility()
    {
        @if (isShow)
        {
            isShow = false;
            PasswordInputIcon = Icons.Material.Filled.VisibilityOff;
            PasswordInput = InputType.Password;
        }
        else
        {
            isShow = true;
            PasswordInputIcon = Icons.Material.Filled.Visibility;
            PasswordInput = InputType.Text;
        }
    }

    // Save the user details and navigate to 'Dashboard'
    private void HandleSignup()
    {
        AuthService.SaveUser(user.Username, user.Password, user.PreferredCurrency);
        NavigationManager.NavigateTo("/dashboard");
    }
}
